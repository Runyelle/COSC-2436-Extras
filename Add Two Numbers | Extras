/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* l3 = new ListNode();
        ListNode* curr = l3;
        int carry = 0;
        while(l1 != nullptr || l2 != nullptr || carry != 0){
            int v1;
            if(l1 != nullptr){
                v1 = l1->val;
            }
            else{
                v1 = 0;
            }
            int v2;
            if(l2 != nullptr){
                v2 = l2->val;
            }
            else{
                v2 = 0;
            }

            int val = v1 + v2 + carry;
            carry = val / 10;
            val = val % 10;
            curr->next = new ListNode(val);

            curr = curr->next;

            l1 = (l1 != nullptr) ? l1->next : nullptr;
            l2 = (l2 != nullptr) ? l2->next : nullptr;
        }
        return l3->next;
    }
};
